{"pageProps":{"editorialData":{"editorial":"<p>Title: CNST1</p>\n<p>Difficulty: Easy.</p>\n<p>Prerequisites: Implementation, Graph Theory, BFS.</p>\n<p>Explanation: </p>\n<ol>\n<li>We need to check if a star belongs to a separate constellation or not. One way of doing that is when we encounter a star in the grid,\nwe should check if it has a star to adjacent left and just above it. A new constellation is marked when a gap is present on both sides i.e. no star.\nWe need not check if it has a star on adjacent right or just below it(which are checked later).</li>\n<li>grid[0][0] is a special(first) case. If a star is present, raise constellation count.</li>\n<li>For edge cases, Row 1, we only check for adjacent left cell and if a star is not present, we mark it as a new constellation. Similarly for Column 1, we only check for cell just above it.</li>\n</ol>\n<p>Time Complexity: O(m*n)</p>\n","solutions":{"cpp":"#include <iostream>\r\n#include <vector>\r\nusing namespace std;\r\nint main()\r\n{\r\n    int t;\r\n    cin>>t;\r\n    int m;\r\n    int n;\r\n    int a[1005][1005] = {{0}};\r\n    for(int test=0;test<t;++test)\r\n    {\r\n        cin>>m>>n;        \r\n        for(int i=0;i<m;++i)\r\n        {\r\n            for(int j=0;j<n;++j)\r\n            {\r\n                cin>>a[i][j];\r\n            }\r\n        }\r\n        int count=0;\r\n        for(int i=0;i<m;++i)\r\n        {\r\n            for(int j=0;j<n;++j)\r\n            {\r\n                if(a[i][j])\r\n                {\r\n                    if(a[i][j]==1){\r\n                        if(i==0 && j==0)\r\n                            ++count;\r\n                        else if(i == 0 && a[i][j-1] == 0)\r\n                            ++count;\r\n                        else if(j==0 && a[i-1][j] == 0)\r\n                            ++count;                            \r\n                        else if(a[i-1][j] == 0 && a[i][j-1] == 0)\r\n                            ++count;                        \r\n                    }                                            \r\n                }\r\n            }\r\n        }\r\n        cout<<count<<endl;\r\n    }\r\n    return 0;\r\n}"}}},"__N_SSG":true}